name: Otomatik Deploy

on:
  push:
    branches:
      - '**'  # Tüm branch'lerdeki push'larda çalışır

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Kodu klonla
        uses: actions/checkout@v4

      - name: Sunucuya deploy et
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd /home/akn/webimar
            git reset --hard
            git clean -fd
            git pull origin main

            # Django API Deploy
            cd webimar-api
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            . venv/bin/activate
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements.txt
            python3 manage.py migrate
            python3 manage.py collectstatic --noinput

            pkill -f "gunicorn webimar_api.wsgi" || true

            cd ..
            mkdir -p logs
            cd webimar-api
            nohup gunicorn webimar_api.wsgi:application --bind 0.0.0.0:8000 > ../logs/django.log 2>&1 &

            # React Frontend Deploy
            cd ../webimar-react
            npm install

            echo "REACT_APP_API_BASE_URL=http://104.247.166.125:8000/api" > .env.production
            echo "REACT_APP_BACKEND_URL=http://104.247.166.125:8000" >> .env.production
            echo "NODE_ENV=production" >> .env.production
            echo "GENERATE_SOURCEMAP=false" >> .env.production

            npm run build

            pkill -f "serve -s build" || true

            cd ..
            mkdir -p logs
            cd webimar-react
            nohup npx serve -s build -l 3000 > ../logs/react.log 2>&1 &
