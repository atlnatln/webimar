name: Otomatik Deploy

on:
  push:
    branches:
      - '**'  # Tüm branch'lerdeki push'larda çalışır

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Kodu klonla
        uses: actions/checkout@v4

      - name: Sunucuya deploy et
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/akn/webimar
            git reset --hard
            git clean -fd
            git pull origin main
            
            # Django API Deploy
            cd webimar-api
            source venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            
            # Kill existing Django process
            pkill -f "gunicorn webimar_api.wsgi" || true
            
            # Start Django API server in background
            nohup gunicorn webimar_api.wsgi:application --bind 0.0.0.0:8000 > ../logs/django.log 2>&1 &
            
            # React Frontend Deploy
            cd ../webimar-react
            npm install
            
            # Create production environment file
            echo "REACT_APP_API_BASE_URL=http://104.247.166.125:8000/api" > .env.production
            echo "REACT_APP_BACKEND_URL=http://104.247.166.125:8000" >> .env.production
            echo "NODE_ENV=production" >> .env.production
            echo "GENERATE_SOURCEMAP=false" >> .env.production
            
            # Build with production environment
            npm run build
            
            # Kill existing React process
            pkill -f "serve -s build" || true
            
            # Start React server in background
            nohup npx serve -s build -l 3000 > ../logs/react.log 2>&1 &
            
            # Create logs directory if it doesn't exist
            cd ..
            mkdir -p logs
